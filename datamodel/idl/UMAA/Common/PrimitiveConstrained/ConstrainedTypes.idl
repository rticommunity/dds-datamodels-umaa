/**
 *
 * DISTRIBUTION STATEMENT A. Approved for public release.
 * Distribution is unlimited.
 * This software was developed by the Department of the Navy,
 * NAVSEA Unmanned and Small Combatants. It is provided under the terms of
 * use found in the LICENSE file at the source code root directory.
 *
 */

// WARNING: THIS CODE IS AUTO-GENERATED
//   DO NOT EDIT

/**
  *
  * Version 6.0
  * Date: 2024-06-06
  *
  */


#ifndef _LDM_MDE_REFINEMENTS_BASISELEMENTS_PRIMITIVETYPES_CONSTRAINEDTYPES_CONSTRAINEDTYPES
#define _LDM_MDE_REFINEMENTS_BASISELEMENTS_PRIMITIVETYPES_CONSTRAINEDTYPES_CONSTRAINEDTYPES


module UMAA
{
  module Common
  {
    module PrimitiveConstrained
    {


        const double AccelerationLocalWaterMass_MIN = -299792458.0;
        const double AccelerationLocalWaterMass_MAX = 299792458.0;
        @doc("maxInclusive=299792458 minInclusive=-299792458 units=MeterPerSecondSquared")
        @range(min=-299792458, max=299792458) @unit("MeterPerSecondSquared")
        typedef double AccelerationLocalWaterMass;

        const double AirTemperature_MIN = -100.0;
        const double AirTemperature_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=-100 units=Celsius")
        @range(min=-100, max=100) @unit("Celsius")
        typedef double AirTemperature;

        const double AngleAcceleration_MIN = -10000.0;
        const double AngleAcceleration_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 units=RadiansPerSecondSquared")
        @range(min=-10000, max=10000) @unit("RadiansPerSecondSquared")
        typedef double AngleAcceleration;

        const double BearingAngle_MIN = -6.28318530718;
        const double BearingAngle_MAX =  6.28318530718;
        @doc("maxInclusive=6.28318530718 minInclusive=-6.28318530718 units=Radian")
        @range(min=-6.28318530718, max=6.28318530718) @unit("Radian")
        typedef double BearingAngle;

        const double CarrierToNoiseDensityRatio_MIN = 0.0;
        const double CarrierToNoiseDensityRatio_MAX = 1000000.0;
        @doc("maxInclusive=1000000 minInclusive=0 units=DecibelHertz")
        @range(min=0, max=1000000) @unit("DecibelHertz")
        typedef double CarrierToNoiseDensityRatio;

        const long ColorComponent_MIN = 0;
        const long ColorComponent_MAX =  255;
        @doc("maxInclusive=255 minInclusive=0")
        @range(min=0, max=255)
        typedef long ColorComponent;

        typedef double ContactUncertainty;

        const double CovarAccelPlatformXYZ_MIN = -10000.0;
        const double CovarAccelPlatformXYZ_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=PlatformXYZ units=MetersSquaredPerSecondsSquaredSquared")
        @range(min=-10000, max=10000) @unit("MetersSquaredPerSecondsSquaredSquared")
        typedef double CovarAccelPlatformXYZ;

        const double CovarOrientationAccelPlatformXYZ_MIN = -100.0;
        const double CovarOrientationAccelPlatformXYZ_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=-100 referenceFrame=PlatformXYZ units=RadiansSquaredPerSecondsSquaredSquared")
        @range(min=-100, max=100) @unit("RadiansSquaredPerSecondsSquaredSquared")
        typedef double CovarOrientationAccelPlatformXYZ;

        const double CovarOrientationNED_MIN = -10000.0;
        const double CovarOrientationNED_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=NED units=RadiansSquared")
        @range(min=-10000, max=10000) @unit("RadiansSquared")
        typedef double CovarOrientationNED;

        const double CovarOrientationVelNED_MIN = -10000.0;
        const double CovarOrientationVelNED_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=NED units=RadiansSquaredPerSecondSquared")
        @range(min=-10000, max=10000) @unit("RadiansSquaredPerSecondSquared")
        typedef double CovarOrientationVelNED;

        const double CovarPosECEF_MIN = -10000.0;
        const double CovarPosECEF_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=ECEF units=MetersSquared")
        @range(min=-10000, max=10000) @unit("MetersSquared")
        typedef double CovarPosECEF;

        const double CovarPosNED_MIN = -10000.0;
        const double CovarPosNED_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=NED units=MetersSquared")
        @range(min=-10000, max=10000) @unit("MetersSquared")
        typedef double CovarPosNED;

        const double CovarPosVelNED_MIN = -10000.0;
        const double CovarPosVelNED_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=NED units=MetersSquaredPerSecond")
        @range(min=-10000, max=10000) @unit("MetersSquaredPerSecond")
        typedef double CovarPosVelNED;

        const double CovarVelNED_MIN = -10000.0;
        const double CovarVelNED_MAX = 10000.0;
        @doc("maxInclusive=10000 minInclusive=-10000 referenceFrame=NED units=MetersSquaredPerSecondSquared")
        @range(min=-10000, max=10000) @unit("MetersSquaredPerSecondSquared")
        typedef double CovarVelNED;

        const double DewPointTemperature_MIN = -100.0;
        const double DewPointTemperature_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=-100 units=Celsius")
        @range(min=-100, max=100) @unit("Celsius")
        typedef double DewPointTemperature;

        const double GeodeticAltitude_MIN = -10000.0;
        const double GeodeticAltitude_MAX = 700000.0;
        @doc("maxInclusive=700000 minInclusive=-10000 units=Meter axisAbbrev=Altitude axisDirection=up axisUnit=Meter rangeMeaning=exact resolution=0.0000000001")
        @range(min=-10000, max=700000) @unit("Meter")
        typedef double GeodeticAltitude;

        const double IlluminatorBeamWidth_MIN = 0.0;
        const double IlluminatorBeamWidth_MAX =  6.28318530718;
        @doc("maxInclusive=6.28318530718 minInclusive=0 units=Radian")
        @range(min=0, max=6.28318530718) @unit("Radian")
        typedef double IlluminatorBeamWidth;

        const double IlluminatorIntensityLevel_MIN = 0.0;
        const double IlluminatorIntensityLevel_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=0")
        @range(min=0, max=100)
        typedef double IlluminatorIntensityLevel;

        const double Left_MIN = -20000000.0;
        const double Left_MAX = 20000000.0;
        @doc("maxInclusive=20000000 minInclusive=-20000000 units=Meter axisAbbrev=Y axisDirection=port axisUnit=Meter rangeMeaning=exact resolution=0.001")
        @range(min=-20000000, max=20000000) @unit("Meter")
        typedef double Left;

        const double MaxEngineOilPressure_MIN = 0.0;
        const double MaxEngineOilPressure_MAX = 512.0;
        @doc("maxInclusive=512 minInclusive=0 units=KiloPascal")
        @range(min=0, max=512) @unit("KiloPascal")
        typedef double MaxEngineOilPressure;

        @doc("length=9")
        typedef string<9> MMSI;

        const long long NanosecondsCount_MIN = -9223372036854775807;
        const long long NanosecondsCount_MAX =  9223372036854775807;
        @doc("maxInclusive=9223372036854775807 minInclusive=-9223372036854775807 units=Nanoseconds type=long long")
        @range(min=-9223372036854775807, max=9223372036854775807) @unit("Nanoseconds")
        typedef long long NanosecondsCount;

        const long NanosecondsDrift_MIN = -2147483648;
        const long NanosecondsDrift_MAX =  2147483647;
        @doc("maxInclusive=2147483647 minInclusive=-2147483648 units=NanosecondsPerSecond")
        @range(min=-2147483648, max=2147483647) @unit("NanosecondsPerSecond")
        typedef long NanosecondsDrift;

        const double NaturalNumberCount_MIN = 0.0;
        const double NaturalNumberCount_MAX = 9223372036854775807.0;
        @doc("maxInclusive=9223372036854775807 minInclusive=0 units=Integer")
        @range(min=0, max=9223372036854775807) @unit("Integer")
        typedef double NaturalNumberCount;

        const double PeakSoundPressureLevel_MIN = -400.0;
        const double PeakSoundPressureLevel_MAX = 400.0;
        @doc("maxInclusive=400 minInclusive=-400 units=Decibel")
        @range(min=-400, max=400) @unit("Decibel")
        typedef double PeakSoundPressureLevel;

        typedef double Ratio;

        const double SignalToNoiseRatio_MIN = 0.0;
        const double SignalToNoiseRatio_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=0 units=Decibel")
        @range(min=0, max=100) @unit("Decibel")
        typedef double SignalToNoiseRatio;

        const double SpeedBSLAcceleration_MIN = -299792458.0;
        const double SpeedBSLAcceleration_MAX = 299792458.0;
        @doc("maxInclusive=299792458 minInclusive=-299792458 units=MeterPerSecondSquared")
        @range(min=-299792458, max=299792458) @unit("MeterPerSecondSquared")
        typedef double SpeedBSLAcceleration;

        @doc("length=4095")
        typedef string<4095> StringLongDescription;

        @doc("length=64")
        typedef string<64> StringName;

        @doc("length=1023")
        typedef string<1023> StringShortDescription;

        @doc("length=256")
        typedef string<256> StringValue;

        @doc("length=2047")
        typedef string<2047> UniformResourceIdentifier;

        const double WaterTemperature_MIN = -22.0;
        const double WaterTemperature_MAX = 100.0;
        @doc("maxInclusive=100 minInclusive=-22 units=Celsius")
        @range(min=-22, max=100) @unit("Celsius")
        typedef double WaterTemperature;

        const double WeatherBarometricPressure_MIN = 600.0;
        const double WeatherBarometricPressure_MAX = 1200.0;
        @doc("maxInclusive=1200 minInclusive=600 units=Millibar")
        @range(min=600, max=1200) @unit("Millibar")
        typedef double WeatherBarometricPressure;

        @doc("units=Meter")
        @unit("Meter")
        typedef double XPosition;

        @doc("units=Meter")
        @unit("Meter")
        typedef double YPosition;

        const double ZPosition_MIN = -100000.0;
        const double ZPosition_MAX = 100000.0;
        @doc("maxInclusive=100000 minInclusive=-100000 units=Meter")
        @range(min=-100000, max=100000) @unit("Meter")
        typedef double ZPosition;


    };
  };
};

#endif // _LDM_MDE_REFINEMENTS_BASISELEMENTS_PRIMITIVETYPES_CONSTRAINEDTYPES_CONSTRAINEDTYPES

